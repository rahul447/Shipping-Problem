{"version":3,"sources":["../lib/api.es6"],"names":["config","Object","freeze","require","app","urlPrefix","use","set","http","port","domain","json","get","req","res","status","send","then","catch","err","listen","console","log","module","exports"],"mappings":"AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAIA,SAASC,OAAOC,MAAP,CAAcC,QAAQ,kBAAR,CAAd,CAAb;AAAA,IACEC,MAAM,wBADR;AAAA,IAEEC,YAAYL,OAAOK,SAFrB;;AAIA;AACAD,IAAIE,GAAJ;AACAF,IAAIG,GAAJ,CAAQ,MAAR,EAAgBP,OAAOQ,IAAP,CAAYC,IAA5B;AACAL,IAAIG,GAAJ,CAAQ,QAAR,EAAkBP,OAAOQ,IAAP,CAAYE,MAA9B;AACAN,IAAIE,GAAJ,CAAQ,qBAAWK,IAAX,EAAR;;AAEAP,IAAIQ,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCA,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,MAArB;AACH,CAFD;;AAIAZ,IAAIQ,GAAJ,MAAWP,SAAX,EAAwB,UAACQ,GAAD,EAAMC,GAAN,EAAc;AAClC,+BAAed,MAAf,EAAuBiB,IAAvB,CAA4B,YAAM;AAC9BH,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AACH,KAFD,EAEGE,KAFH,CAES,eAAO;AACZJ,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,GAArB;AACH,KAJD;AAKH,CAND;;AAQA;;AAEAf,IAAIgB,MAAJ,CAAWhB,IAAIQ,GAAJ,CAAQ,MAAR,CAAX,EAA4BR,IAAIQ,GAAJ,CAAQ,QAAR,CAA5B,EAA+C,YAAY;AACzDS,YAAQC,GAAR,CAAY,kDAAkDlB,IAAIQ,GAAJ,CAAQ,MAAR,CAAlD,GAAoE,YAApE,GAAmFR,IAAIQ,GAAJ,CAAQ,QAAR,CAA/F;AACD,CAFD;;AAIAW,OAAOC,OAAP,GAAiBpB,GAAjB","file":"api.js","sourcesContent":["\"use strict\";\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport {runCloudTravel} from \"./endpoints/index\";\nimport domain from \"express-domain-middleware\";\n\nlet config = Object.freeze(require(\"../config/config\")),\n  app = express(),\n  urlPrefix = config.urlPrefix;\n\n// Sets the relevant config app-wise\napp.use(domain);\napp.set(\"port\", config.http.port);\napp.set(\"domain\", config.http.domain);\napp.use(bodyParser.json());\n\napp.get(\"/healthcheck\", (req, res) => {\n    res.status(200).send(\"OKYE\");\n});\n\napp.get(`${urlPrefix}`, (req, res) => {\n    runCloudTravel(config).then(() => {\n        res.status(200).send(\"Check Console\");\n    }).catch(err => {\n        res.status(404).send(err);\n    });\n});\n\n// Starts the app\n\napp.listen(app.get(\"port\"), app.get(\"domain\"), function () {\n  console.log(\"Server has started and is listening on port: \" + app.get(\"port\") + \" and ip : \" + app.get(\"domain\"));\n});\n\nmodule.exports = app;\n"]}